#!/usr/bin/env php
<?php

use ICanBoogie\Inflector;
use \GetId3\GetId3Core as GetId3;
use Monolog\Logger;
use Monolog\Handler\NullHandler;
use FFMpeg\FFMpeg;

$basedir = dirname(dirname(__FILE__));
require $basedir.'/vendor/autoload.php';


$extensions = get_loaded_extensions();

foreach(array('phpiredis', 'inotify') as $extension) {
	if (!in_array($extension, $extensions)) {
		die("ERROR: extension {$extension} is missing\n");
	}
}


$pids = array();
$tries = array();

function spawn_service($servicename)
{
	switch(($pid = pcntl_fork())) {
	case -1:
		die("BAd, Bad, BAD!\n");
	case 0:
		if (function_exists('setproctitle')) {
			setproctitle('[music-watch]: '.$servicename);
		}
		if (function_exists('cli_set_process_title')) {
			cli_set_process_title("[music-watch]: {$servicename}");
		}
		
		$fqcn = 'Amused\\Service\\'.$servicename;
		$service = new $fqcn;
		
		print "INVOKING {$servicename}\n";
		$service->run();
		
		print "OOOOPS {$servicename} ...\n";
		exit(0);
		break;
	default:
		print "Spawning[{$pid}]: {$servicename}\n";
		$tries[$servicename] = 0;
		return $pid;
	}
}

if (function_exists('setproctitle')) {
	setproctitle('[music-watch]: Console');
}
if (function_exists('cli_set_process_title')) {
	cli_set_process_title("[music-watch]: Console");
}

if (count($argv) <= 1) {
	foreach(array('Scan', 'Watch', 'Web', 'Database') as $servicename) {
		$pids[$servicename] = spawn_service($servicename);
		$tries[$servicename] = 0;
	}	
}
else {
	$args = $argv;
	$progname = array_shift($args);
	foreach($args as $servicename) {
		$pids[$servicename] = spawn_service($servicename);
		$tries[$servicename] = 0;
	}
}

/*
pcntl_signal(SIGTERM, function($sig) {
	foreach($pids as $pid) {
		posix_kill($pid, SIGTERM);
		print "Kill PID = {$pid}\n";
		pcntl_waitpid($pid, $status);
	}
});

pcntl_signal(SIGINT, function($sig) {
	foreach($pids as $pid) {
		posix_kill($pid, SIGTERM);
		print "Kill PID = {$pid}\n";
		pcntl_waitpid($pid, $status);
	}
});
*/

print "Waiting Now...\n";


while(($pid = pcntl_wait($status))) {
	$servicename = array_search($pid, $pids);
	if ($tries[$servicename] < 3) {
		print "$servicename has died, restarting...\n";
		$pids[$servicename] = spawn_service($servicename);
		print "Restarted\n";
	}
	else {
		print "Giving up on {$servicename}\n";
	}
}

